// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/dezer32/mcp-firefly-iii/pkg/fireflyMCP"
)

// InitializeServer creates a fully wired FireflyMCPServer
func InitializeServer(config *fireflyMCP.Config) (*fireflyMCP.FireflyMCPServer, error) {
	httpClient := ProvideHTTPClient(config)
	clientWithResponses, err := ProvideFireflyClient(config, httpClient)
	if err != nil {
		return nil, err
	}
	server := ProvideMCPServer(config)
	handlerContext := ProvideHandlerContext(clientWithResponses, config)
	accountHandlers := ProvideAccountHandlers(handlerContext)
	transactionHandlers := ProvideTransactionHandlers(handlerContext)
	budgetHandlers := ProvideBudgetHandlers(handlerContext)
	categoryHandlers := ProvideCategoryHandlers(handlerContext)
	tagHandlers := ProvideTagHandlers(handlerContext)
	insightHandlers := ProvideInsightHandlers(handlerContext)
	billHandlers := ProvideBillHandlers(handlerContext)
	recurrenceHandlers := ProvideRecurrenceHandlers(handlerContext)
	handlerRegistryImpl := ProvideHandlerRegistry(accountHandlers, transactionHandlers, budgetHandlers, categoryHandlers, tagHandlers, insightHandlers, billHandlers, recurrenceHandlers)
	chain := ProvideMiddlewareChain(config)
	fireflyMCPServer := ProvideFireflyMCPServer(server, clientWithResponses, config, handlerRegistryImpl, chain)
	return fireflyMCPServer, nil
}